{"ast":null,"code":"var _jsxFileName = \"/Users/harim/projects/BookShare_Front/src/components/maker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Preview from '../preview/preview';\nimport styles from './maker.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Maker = ({\n  FileInput,\n  authService,\n  groupRepository\n}) => {\n  _s();\n\n  const historyState = useHistory().state;\n  const [groups, setgroups] = useState({});\n  const [userId, setUserId] = useState(historyState && historyState.id);\n  const history = useHistory(); // 함수를 따로 만들고, useEffect에서 사용, useCallback()을 이용.\n\n  const stopSync = useCallback(async () => {\n    if (!userId) {\n      return;\n    }\n\n    groupRepository.syncgroups(userId, groups => {\n      setgroups(groups);\n    });\n    return () => stopSync();\n  }, [userId, groupRepository]);\n  useEffect(() => {\n    stopSync();\n  }, [stopSync]);\n  useEffect(() => {\n    authService.onAuthChange(user => {\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        history.push('/');\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.maker,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(Preview, {\n        groups: groups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Maker, \"Y2DB1JwS+JtsSDoZKkenLW/O+fE=\", false, function () {\n  return [useHistory, useHistory];\n});\n\n_c = Maker;\nexport default Maker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maker\");","map":{"version":3,"sources":["/Users/harim/projects/BookShare_Front/src/components/maker.jsx"],"names":["React","useCallback","useEffect","useState","useHistory","Preview","styles","Maker","FileInput","authService","groupRepository","historyState","state","groups","setgroups","userId","setUserId","id","history","stopSync","syncgroups","onAuthChange","user","uid","push","maker","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAA+C;AAAA;;AACzD,QAAMC,YAAY,GAAGP,UAAU,GAAGQ,KAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACQ,YAAY,IAAIA,YAAY,CAACM,EAA9B,CAApC;AACA,QAAMC,OAAO,GAAGd,UAAU,EAA1B,CAJyD,CAMzD;;AACA,QAAMe,QAAQ,GAAGlB,WAAW,CAAC,YAAY;AACrC,QAAI,CAACc,MAAL,EAAY;AACR;AACH;;AACDL,IAAAA,eAAe,CAACU,UAAhB,CAA2BL,MAA3B,EAAmCF,MAAM,IAAI;AACzCC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACH,KAFD;AAGA,WAAO,MAAMM,QAAQ,EAArB;AACH,GAR2B,EAQzB,CAACJ,MAAD,EAASL,eAAT,CARyB,CAA5B;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,WAAW,CAACY,YAAZ,CAAyBC,IAAI,IAAI;AAC7B,UAAIA,IAAJ,EAAU;AACNN,QAAAA,SAAS,CAACM,IAAI,CAACC,GAAN,CAAT;AACH,OAFD,MAGK;AACDL,QAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACH;AACJ,KAPD;AAQH,GATQ,CAAT;AAWA,sBACI;AAAS,IAAA,SAAS,EAAElB,MAAM,CAACmB,KAA3B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,SAAvB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvCD;;GAAMN,K;UACmBH,U,EAGLA,U;;;KAJdG,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Preview from '../preview/preview';\nimport styles from './maker.module.css';\n\n\nconst Maker = ({FileInput, authService, groupRepository}) => {\n    const historyState = useHistory().state;\n    const [groups, setgroups] = useState({});\n    const [userId, setUserId] = useState(historyState && historyState.id);\n    const history = useHistory();\n\n    // 함수를 따로 만들고, useEffect에서 사용, useCallback()을 이용.\n    const stopSync = useCallback(async () => {\n        if (!userId){\n            return;\n        }\n        groupRepository.syncgroups(userId, groups => {\n            setgroups(groups);\n        });\n        return () => stopSync();\n    }, [userId, groupRepository]);\n    \n    useEffect(() => {\n        stopSync();\n    }, [stopSync]);\n\n    useEffect(()=>{\n        authService.onAuthChange(user => {\n            if (user) {\n                setUserId(user.uid);\n            }\n            else {\n                history.push('/');\n            }\n        });\n    });\n    \n    return (\n        <section className={styles.maker}>\n            <div className={styles.container}>\n                <Preview groups={groups}/>\n            </div>\n        </section>\n    );\n};\n\nexport default Maker;"]},"metadata":{},"sourceType":"module"}