{"ast":null,"code":"import { firebaseAuth, githubProvider, googleProvider } from './firebase';\n\nclass AuthService {\n  login(providerName) {\n    const authProvider = this.getProvider(providerName);\n    return firebaseAuth.signInWithPopup(authProvider);\n  }\n\n  onAuthChange(onUserChanged) {\n    firebaseAuth.onAuthStateChanged(user => {\n      onUserChanged(user);\n    });\n  }\n\n  logout() {\n    firebaseAuth.signOut();\n  }\n\n  getProvider(providerName) {\n    switch (providerName) {\n      case 'Google':\n        return googleProvider;\n\n      case 'Github':\n        return githubProvider;\n\n      default:\n        return null;\n    }\n  }\n\n}\n\nexport default AuthService;","map":{"version":3,"sources":["/Users/harim/projects/BookShare_Front/src/service/auth_service.js"],"names":["firebaseAuth","githubProvider","googleProvider","AuthService","login","providerName","authProvider","getProvider","signInWithPopup","onAuthChange","onUserChanged","onAuthStateChanged","user","logout","signOut"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,cAAvC,QAA6D,YAA7D;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,KAAK,CAACC,YAAD,EAAe;AAChB,UAAMC,YAAY,GAAG,KAAKC,WAAL,CAAiBF,YAAjB,CAArB;AACA,WAAOL,YAAY,CAACQ,eAAb,CAA6BF,YAA7B,CAAP;AACH;;AAEDG,EAAAA,YAAY,CAACC,aAAD,EAAe;AACvBV,IAAAA,YAAY,CAACW,kBAAb,CAAgCC,IAAI,IAAG;AACnCF,MAAAA,aAAa,CAACE,IAAD,CAAb;AACH,KAFD;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJb,IAAAA,YAAY,CAACc,OAAb;AACH;;AAEDP,EAAAA,WAAW,CAACF,YAAD,EAAe;AACtB,YAAQA,YAAR;AACI,WAAK,QAAL;AACA,eAAOH,cAAP;;AACA,WAAK,QAAL;AACA,eAAOD,cAAP;;AACA;AACA,eAAO,IAAP;AANJ;AAQH;;AAzBa;;AA6BlB,eAAeE,WAAf","sourcesContent":["import { firebaseAuth, githubProvider, googleProvider } from './firebase'; \n\nclass AuthService {\n    login(providerName) {\n        const authProvider = this.getProvider(providerName);\n        return firebaseAuth.signInWithPopup(authProvider);\n    }\n\n    onAuthChange(onUserChanged){\n        firebaseAuth.onAuthStateChanged(user =>{\n            onUserChanged(user);\n        })\n    }\n\n    logout(){\n        firebaseAuth.signOut();\n    }\n\n    getProvider(providerName) {\n        switch (providerName) {\n            case 'Google':\n            return googleProvider;\n            case 'Github':\n            return githubProvider;\n            default:\n            return null;\n        }\n    }\n\n}\n\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}